
import 'package:flutter/material.dart';
import 'package:reachout_versiontwodotzero/constants/color.dart';

class ImageCarousel extends StatefulWidget {
  final List<String> images;

  const ImageCarousel({
    Key? key,
    required this.images,
  }) : super(key: key);

  @override
  _ImageCarouselState createState() => _ImageCarouselState();
}

class _ImageCarouselState extends State<ImageCarousel> {


  late PageController _pageController;
  int activePage = 0;

  @override
  void initState() {
    _pageController = PageController(
      viewportFraction: 1,
      initialPage: 0,
    );


    super.initState();
  }

  @override
  Widget build(BuildContext context) {

    double screenWidth = MediaQuery.of(context).size.width;
    double screenHeight = MediaQuery.of(context).size.height;

    return Column(
      children: [
        Container(
          height: screenHeight *0.24,
          width: double.infinity,
          child: PageView.builder(
            physics: BouncingScrollPhysics(),

            controller: _pageController,
            itemCount: widget.images.length,
            onPageChanged: (page) {
              int currentPage = page % widget.images.length;
              setState(() {
                activePage = currentPage;
              });
            },
            itemBuilder: (context, pagePosition) {
              int index = pagePosition % widget.images.length;
              bool active = index == activePage;
              return carouselItem(widget.images, pagePosition, active);
            },
          ),
        ),
        SizedBox(height: 15),
        Row(
          mainAxisAlignment: MainAxisAlignment.center,
          children: imageIndicator(widget.images.length, activePage),
        ),
      ],
    );
  }
}

AnimatedOpacity carouselItem(images, pagePosition, active) {
   double margin = active ? 5 : 10;
  double opacity = active ? 1.0 : 0.7;
  return AnimatedOpacity(
    opacity: opacity,
    curve: Curves.fastOutSlowIn,

    duration: const Duration(milliseconds: 500),
    child: AnimatedContainer(
      duration: const Duration(milliseconds: 500),
      curve: Curves.fastOutSlowIn,
       margin: EdgeInsets.all(margin),
      decoration: BoxDecoration(
        borderRadius: BorderRadius.circular(16),
        image: DecorationImage(
          fit: BoxFit.cover,
          image: NetworkImage(images[pagePosition]),
        ),
      ),
    ),
  );
}

List<Widget> imageIndicator(imagesLength, currentIndex) {
  return List<Widget>.generate(imagesLength, (index) {
    return Container(
      margin: EdgeInsets.symmetric(vertical: 5, horizontal: 5),
      height: 10,
      width: 10,
      decoration: BoxDecoration(
        color: index == currentIndex ? Colours.rGreen : Colors.grey,
        shape: BoxShape.circle,
      ),
    );
  });
}
